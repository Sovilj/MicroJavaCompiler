// Test301 i Test302 zajedno

program test301test302

	enum Broj { NULA, JEDAN, PET=5, DESET=10}
	enum IncrementType { BY_ONE, DOUBLE_VALUE }
	
	const int jedan = 1;
	const int pet = 5;
	
	int i;
	bool ibool;
	

	int niz[];
	char nizch[];
	
{
	int sum(int z, int d)
	{
		return z + d;
	}
	int inc(int broj)
	{
		return broj + Broj.JEDAN;
	}
	int inkrement(int a, IncrementType type) int pom; 
	{
		if(type == IncrementType.BY_ONE) pom = 1;
		else if(type == IncrementType.DOUBLE_VALUE) pom = a;

		return sum(a,pom);
	}

	void mul(int arr[], int index, int b)
	{
		arr[index] = arr[index] * b;
	}

	void main()	
		int bodovi;
		Broj nula, jedan;
	{
		nula = Broj.NULA;
		jedan = Broj.JEDAN;	

		bodovi = 0;
		bodovi++;
		bodovi = bodovi + jedan;
		bodovi = bodovi * pet;
		bodovi--;
		print(bodovi); 
			
		
		niz = new int[2];
		niz[nula] = pet;
		niz[1] = Broj.DESET;
		mul(niz, inc(0), 2);
		mul(niz, Broj.NULA, inc(inc(Broj.JEDAN)+1));
		bodovi = niz[1]/niz[0];
		print(bodovi); 
		print(niz[Broj.JEDAN]);
		
		
		nizch = new char[3];
		nizch[0] = 'a';
		nizch[jedan] = 'b';
		nizch[pet - 3] = 'c';
		print( nizch[inc(0)]);
		print( nizch[jedan * 2]);
			
		
		bodovi = bodovi + ((pet * jedan - 1) * inc(Broj.JEDAN) - (3 % 2 + 3 * 2 - 3) - inc(Broj.NULA) * 0); 
		print(bodovi);
			
			
		read(bodovi);
		bodovi = inc(bodovi);
		print(bodovi);
			
	//test 302
	
	if(1!=1) print(-6);
		else print(0);  
			
		ibool = false;
		i = 0;
		for(i=0;i<5;i++)
		{
			if(i == 2) ibool = true;
		}
		
		if(ibool)
			if(i == 5) print(1); 
			else print(-1);
		
		if(niz[2] == 4) print(ord('A')); 
		else print(ord('a'));
		
		print(eol);
		i = 0;
		for(;i<10;) 
		{
			if(i == 3)
			{
				i++;
				continue;
			}
			if(i == 4) break;
			i = inkrement(i, IncrementType.BY_ONE);
		}
		
		if(i == 3) print(4);
		else print(-4);  
		
		read(niz[0]);
		read(niz[1]);
		read(niz[2]);
		print(eol);
		
		print(sum (sum(niz[0], niz[1]), niz[2])); 
			
		print(eol); 
		print(inkrement(niz[2], IncrementType.DOUBLE_VALUE));
	
	}
}


